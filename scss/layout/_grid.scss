$enable-flex: true;

.grid {
	list-style: none;
	margin: 0 0 0 #{-$grid-gap};
	padding: 0 $grid-gap;

	&.wrapper {
		left: -$grid-gap;
		max-width: $wrapper+$grid-gap;
		padding-right: 0;
		position: relative;

		@media all and (min-width: $wrapper+$grid-gap) {
			left: -$grid-gap/2;
		}
	}
}

@if $enable-flex {

	.grid-flex {
		display: flex;
		flex-wrap: wrap;
	}

	.grid-flex--no-padding {
		@extend .grid-flex;
	}

	@each $flex-align, $flex-value in $flex-alignments {
		.grid-flex--#{$flex-align} {
			align-items: $flex-value;
			display: flex;
			flex-wrap: wrap;
		}

		.grid__item--#{$flex-align} {
			@extend .grid__item;
			align-self: $flex-value;
		}
	}

}


.grid .grid {
	padding: 0;
}

.grid--no-padding {
	list-style: none;
	margin: 0;
	padding: 0;
}

.grid__item {
	display: inline-block;
	margin-bottom: $gap;
	padding-left: $gap;
	width: 100%;

	&--no-margin {
		margin-bottom: 0;
	}

	@if $enable-flex {
		.grid-flex & {
			flex: 0 0 100%;
		}
	}
}

.grid--no-padding > .grid__item,
.grid-flex--no-padding > .grid__item {
	padding-left: 0;
}

@include create-grids();
