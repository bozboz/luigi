@function lower-bound($range){
	@if length($range) <= 0 {
		@return 0;
	}
	@return nth($range, 1);
}

@function upper-bound($range) {
	@if length($range) < 2 {
		@return 999999999999;
	}
	@return nth($range, 2);
}

// Media Queries
$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

$small-up: $screen !default;
$small-only: "#{$screen} and (max-width: #{upper-bound(map-get($breakpoints, small))})" !default;

$medium-up: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, medium))})" !default;
$medium-only: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, medium))}) and (max-width:#{upper-bound(map-get($breakpoints, medium))})" !default;

$large-up: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, large))})" !default;
$large-only: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, large))}) and (max-width:#{upper-bound(map-get($breakpoints, large))})" !default;

$xlarge-up: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, xlarge))})" !default;
$xlarge-only: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, xlarge))}) and (max-width:#{upper-bound(map-get($breakpoints, xlarge))})" !default;

$xxlarge-up: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, xxlarge))})" !default;
$xxlarge-only: "#{$screen} and (min-width:#{lower-bound(map-get($breakpoints, xxlarge))}) and (max-width:#{upper-bound(map-get($breakpoints, xxlarge))})" !default;

@mixin create-grids($cols: 12, $bps: $breakpoints) {
	@each $bp-name, $bp-range in $bps {
		$bp-value: lower-bound($bp-range);

		// this checks to see if the first in map
		@if $bp-name == nth(map-keys($breakpoints),1) {
			@for $i from 1 through $cols {
				.#{$bp-name}-#{$i} {
					width: (100% / $cols) * $i;
				}
			}
		} @else {
			@media all and (min-width: $bp-value) {
				@for $i from 1 through $cols {
					.#{$bp-name}-#{$i} {
						width: (100% / $cols) * $i;
					}
				}
			}
		}

		@media all and (min-width: $bp-value) and (max-width: upper-bound($bp-range)) {
			.#{$bp-name}--hidden {
				display: none !important;
			}
		}
	}
}
